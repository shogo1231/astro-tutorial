---
import Layout from '../../layouts/Layout.astro';
import BlogPost from '../../components/BlogPost.astro';

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../posts/*.md');

  // allPostsで取得した情報からtagsが存在するデータのみ抽出、２次元配列になっているのでflat()で平坦し、重複削除
  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag }, // 動的サイト名を決めるためのプロパティ
      props: { posts: filteredPosts }, // 動的サイトで実際に表示する値を設定するプロパティ
    };
  });

  // return [
  //   {params: {tag: "astro"}, props: {posts: allPosts}},
  //   {params: {tag: "成功"}, props: {posts: allPosts}},
  //   {params: {tag: "コミュニティ"}, props: {posts: allPosts}},
  //   {params: {tag: "ブログ"}, props: {posts: allPosts}},
  //   {params: {tag: "後退"}, props: {posts: allPosts}},
  //   {params: {tag: "公開学習"}, props: {posts: allPosts}}
  // ]
}

const { tag } = Astro.params;
const { posts } = Astro.props;

---
<Layout pageTitle={tag}>
  <p>{tag}のタグが付いた記事</p>
  {posts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
</Layout>